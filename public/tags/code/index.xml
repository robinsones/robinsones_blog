<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Code on Hooked on Data</title>
    <link>/tags/code/</link>
    <description>Recent content in Code on Hooked on Data</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 13 Jan 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/code/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>An Introduction to Tidyverts: Time Series and Forecasting in R</title>
      <link>/time-series-and-forecasting-in-r/</link>
      <pubDate>Mon, 13 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>/time-series-and-forecasting-in-r/</guid>
      <description>I recently moved to a new position at Warby Parker as a senior data scientist. Although I’ve loved working on A/B testing and continue to do so, one of the things that drew me to this position was the chance to try out different areas of data science. And that opportunity came early, as one of my first projects has been working on time series and forecasting.
While I’ve been programming in R for 9 years now and minored in statistics, I had actually never done any time series analysis in courses or at work.</description>
    </item>
    
    <item>
      <title>What Types Should You Have on Your Pokémon Team? Efficient Simulation with Matrices in R</title>
      <link>/pokemon-type-combinations/</link>
      <pubDate>Tue, 20 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/pokemon-type-combinations/</guid>
      <description>I recently started playing Pokémon again - “Pokémon Let’s Go Eevee” on the Nintendo Switch to be specific. In the classic Pokémon games, you have a team of 6 Pokémon that you use to battle against other trainers. In battles, type match-ups are very important, as some types of moves are “super effective” against other types. For example, fire moves are super effective against grass Pokémon, which means they do double the damage they normally would.</description>
    </item>
    
    <item>
      <title>Introducing the funneljoin package</title>
      <link>/introducing-the-funneljoin-package/</link>
      <pubDate>Thu, 01 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/introducing-the-funneljoin-package/</guid>
      <description>Have you ever had a “first this then that” question? For example, maybe you’re an e-commerce business and you want all the times people clicked on an item and then added it to their cart within 2 days, or the last page they visited before registering. Or you work with pharmaceutical data and need to know what drugs people took before drug x and which drugs they took afterward and when.</description>
    </item>
    
    <item>
      <title>Going Off the Map: Exploring purrr&#39;s Other Functions</title>
      <link>/going-off-the-map/</link>
      <pubDate>Wed, 09 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/going-off-the-map/</guid>
      <description>I recently completed Colin Fay’s excellent DataCamp course, Intermediate Functional Programming with purrr (full disclosure: I work at DataCamp, but part of why I joined was that I was a big fan of the short, interactive course format). Although I’ve used the purrr package before, there were a lot of functions in this course that were new to me. I wrote this post to hopefully demystify purrr a bit for those who find it overwhelming and illustrate some of its lesser known functions.</description>
    </item>
    
    <item>
      <title>The Lesser Known Stars of the Tidyverse</title>
      <link>/the-lesser-known-stars-of-the-tidyverse/</link>
      <pubDate>Fri, 16 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>/the-lesser-known-stars-of-the-tidyverse/</guid>
      <description>In early 2018, I gave a few conference talks on “The Lesser Known Stars of the Tidyverse.” I focused on some packages and functions that aren’t as well known as the core parts of ggplot2 and dplyr but are very helpful in exploratory analysis. I walked through an example analysis of Kaggle’s 2017 State of Data Science and Machine Learning Survey to show how I would use these functions in an exploratory analysis.</description>
    </item>
    
    <item>
      <title>Making R Code Faster: A Case Study</title>
      <link>/making-r-code-faster-a-case-study/</link>
      <pubDate>Thu, 30 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>/making-r-code-faster-a-case-study/</guid>
      <description>About two months ago I put a call out to Rstats twitter:
#rstats twitter - who loves helping to make (short) code run as fast as possible? Playing w/ foreach, doparallel, data.table but know little — Emily Robinson (@robinson_es) October 4, 2017   I had a working, short script that took 3 1/2 minutes to run. While this may be fine if you only need to run it once, I needed to run it hundreds of time for simulations.</description>
    </item>
    
  </channel>
</rss>